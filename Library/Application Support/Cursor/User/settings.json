{
  "breadcrumbs.enabled": true,
  "diffEditor.codeLens": true,
  "editor.accessibilitySupport": "off",
  "editor.bracketPairColorization.enabled": true,
  "editor.cursorBlinking": "expand",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorStyle": "line",
  "editor.defaultFormatter": "dbaeumer.vscode-eslint",
  "editor.find.autoFindInSelection": "multiline",
  "editor.fontFamily": "'Monaspace Krypton','Cascadia Code', 'GoMono Nerd Font', 'CaskaydiaCove Nerd Font', 'Droid Sans Mono', Consolas, 'Courier New', monospace",
  "editor.fontLigatures": "'ss02', 'liga'",
  "editor.fontSize": 13,
  "editor.formatOnPaste": false,
  "editor.formatOnSave": true,
  "editor.formatOnType": false,
  "editor.guides.bracketPairs": "active",
  "editor.inlayHints.enabled": "offUnlessPressed",
  "editor.inlineSuggest.suppressSuggestions": true,
  "editor.minimap.enabled": true,
  "editor.minimap.maxColumn": 100,
  "editor.minimap.renderCharacters": false,
  "editor.minimap.showSlider": "always",
  "editor.minimap.size": "fill",
  "editor.renderWhitespace": "boundary",
  "editor.smoothScrolling": true,
  "editor.stickyScroll.enabled": true,
  "editor.suggest.shareSuggestSelections": true,
  "editor.tabSize": 2,
  // "editor.formatOnSave": true, // this will currently make "eslint.codeActionsOnSave.rules" setting not work
  "editor.codeActionsOnSave": {
    "source.fixAll": "always"
  },
  // Explorer
  "explorer.compactFolders": false,
  // Extensions
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  // Files
  "files.autoGuessEncoding": true,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1000,
  "files.autoSaveWhenNoErrors": true,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "files.exclude": {
    "**/.trunk/*actions/": true,
    "**/.trunk/*logs/": true,
    "**/.trunk/*notifications/": true,
    "**/.trunk/*out/": true,
    "**/.trunk/*plugins/": true,
    "**/*.uid": true
  },
  "files.watcherExclude": {
    "**/.trunk/*actions/": true,
    "**/.trunk/*logs/": true,
    "**/.trunk/*notifications/": true,
    "**/.trunk/*out/": true,
    "**/.trunk/*plugins/": true
  },
  // HTTP
  "http.experimental.systemCertificatesV2": true,
  "http.proxyStrictSSL": false,
  "http.proxySupport": "fallback",
  // SECURITY
  "security.promptForLocalFileProtocolHandling": false,
  "security.workspace.trust.untrustedFiles": "open",
  // Terminal
  "terminal.integrated.scrollback": 10000,
  "terminal.integrated.fontFamily": "CaskaydiaCove Nerd Font Mono",
  // Workbench
  "workbench.colorCustomizations": {
    "tree.indentGuidesStroke": "#999999"
  },
  "workbench.editor.decorations.colors": true,
  "workbench.editor.pinnedTabSizing": "shrink",
  "workbench.editor.pinnedTabsOnSeparateRow": true,
  "workbench.editor.wrapTabs": true,
  "workbench.fontAliasing": "antialiased",
  "workbench.tree.enableStickyScroll": true,
  "workbench.tree.indent": 11,
  "workbench.tree.renderIndentGuides": "always",
  // WINDOW
  "window.density.editorTabHeight": "compact",
  "window.newWindowProfile": "Default",
  "eslint.useESLintClass": true,
  // GIT
  "git.autofetch": true,
  "git.autoStash": true,
  "git.enableSmartCommit": true,
  "git.mergeEditor": true,
  "git.useEditorAsCommitInput": false,
  // GITHUB
  "githubPullRequests.pullBranch": "never",
  "gitlens.advanced.messages": {
    "suppressLineUncommittedWarning": true
  },
  "github.copilot.enable": {
    "*": false,
    "plaintext": false,
    "markdown": true,
    "scminput": false
  },
  ///////////////////
  // LANGUAGES
  ///////////////////
  "[dotenv]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[go]": {
    "editor.defaultFormatter": "golang.go"
  },
  "go.toolsManagement.autoUpdate": true,
  "[go.mod]": {
    "editor.defaultFormatter": "golang.go"
  },
  "[javascript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "[javascriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[properties]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[json]": {
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.suggest.insertMode": "replace",
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[markdown]": {
    "editor.unicodeHighlight.invisibleCharacters": true
  },
  "[plaintext]": {
    "editor.unicodeHighlight.invisibleCharacters": true
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[ignore]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // Random Extensions
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
  "cursor.cpp.enablePartialAccepts": true,
  "cursor.diffs.useCharacterLevelDiffs": true,
  "cursorStats.showTotalRequests": true,
  "cursor.cpp.disabledLanguages": [
    "plaintext",
    "scminput"
  ],
  "debug.toolBarLocation": "commandCenter",
  "gitlens.ai.model": "vscode",
  "gitlens.ai.vscode.model": "copilot:gpt-4o",
  "geminicodeassist.project": "",
  "notebook.defaultFormatter": "esbenp.prettier-vscode",
  "oneDarkPro.bold": true,
  "roo-cline.allowedCommands": [
    "npm test",
    "npm install",
    "tsc",
    "git log",
    "git diff",
    "git show"
  ],
  "totalTypeScript.hideAllTips": false,
  "totalTypeScript.hideBasicTips": true,
  "totalTypeScript.hiddenTips": [
    "typeof",
    "passing-generics-to-types",
    "returntype-utility-type",
    "generic-slots-in-functions",
    "interface-with-generics",
    "record-utility-type",
    "type-alias-with-generics",
    "omit-utility-type",
    "readonly-utility-type",
    "keyof",
    "type-alias-with-multiple-generics",
    "never-keyword",
    "required-utility-type",
    "partial-utility-type",
    "type-predicate",
    "mapped-type",
    "as-const",
    "as-const-on-object",
    "in-operator-narrowing",
    "conditional-type",
    "tuple-type"
  ],
  "update.releaseTrack": "prerelease",
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "workbench.activityBar.orientation": "vertical",
  "evenBetterToml.formatter.alignComments": true,
  "evenBetterToml.formatter.alignEntries": true,
  "cursor.composer.shouldChimeAfterChatFinishes": true,
  "cursor.composer.shouldAllowCustomModes": true,
  "eslint.format.enable": true,
  "augment.completions.enableAutomaticCompletions": false,
  "window.commandCenter": true,
  "workbench.iconTheme": "icons",
  "cursor.terminal.usePreviewBox": true,
  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff"
  },
  "[ocaml]": {
    "editor.defaultFormatter": "ocamllabs.ocaml-platform"
  },
  "[dune]": {
    "editor.defaultFormatter": "ocamllabs.ocaml-platform"
  },
  "vscode_custom_css.imports": [
    "file:///Users/lecoqjacob/.config/vscode-styles.css"
  ],
  "[ocaml.interface]": {
    "editor.defaultFormatter": "ocamllabs.ocaml-platform"
  },
  "yaml.schemas": {
    "/Users/lecoqjacob/.cursor/extensions/continue.continue-1.0.7-darwin-arm64/config-yaml-schema.json": [
      ".continue/**/*.yaml"
    ]
  },
  "cursor.general.gitGraphIndexing": "enabled",
  "gitlens.ai.generateCommitMessage.customInstructions": "use semantic commit messages with type(scope): description",
  "ocaml.commands.typedHoles.constructAfterNavigate": true,
  "ocaml.server.extendedHover": true,
  "ocaml.server.syntaxDocumentation": true,
  "augment.chat.userGuidelines": "",
  "geminiCoder.presets": [
    {
      "name": "2.5 Pro",
      "chatbot": "AI Studio",
      "model": "gemini-2.5-pro-preview-03-25",
      "temperature": 0.5,
      "systemInstructions": "You're a helpful coding assistant."
    },
    {
      "name": "2.5 Flash",
      "chatbot": "AI Studio",
      "model": "gemini-2.5-flash-preview-04-17",
      "temperature": 0.5,
      "systemInstructions": "You're a helpful coding assistant."
    },
    {
      "name": "2.0 Flash",
      "chatbot": "AI Studio",
      "model": "gemini-2.0-flash",
      "temperature": 0.5,
      "systemInstructions": "You're a helpful coding assistant."
    },
    {
      "name": "2.5 Pro",
      "chatbot": "Gemini",
      "model": "2.5-pro"
    },
    {
      "name": "2.5 Pro (canvas)",
      "chatbot": "Gemini",
      "model": "2.5-pro",
      "options": [
        "canvas"
      ]
    },
    {
      "name": "2.5 Flash",
      "chatbot": "Gemini",
      "model": "2.5-flash-experimental"
    },
    {
      "name": "2.5 Flash (canvas)",
      "chatbot": "Gemini",
      "model": "2.5-flash-experimental",
      "options": [
        "canvas"
      ]
    },
    {
      "name": "ChatGPT",
      "chatbot": "ChatGPT"
    },
    {
      "name": "Claude",
      "chatbot": "Claude"
    },
    {
      "name": "Grok",
      "chatbot": "Grok"
    },
    {
      "name": "Grok (Think)",
      "chatbot": "Grok",
      "options": [
        "think"
      ]
    },
    {
      "name": "DeepSeek",
      "chatbot": "DeepSeek"
    },
    {
      "name": "DeepSeek - DeepThink (R1)",
      "chatbot": "DeepSeek",
      "options": [
        "deep-think"
      ]
    },
    {
      "name": "Qwen",
      "chatbot": "Qwen",
      "options": [
        "thinking"
      ]
    },
    {
      "name": "Mistral",
      "chatbot": "Mistral"
    },
    {
      "name": "HuggingChat",
      "chatbot": "HuggingChat"
    },
    {
      "name": "Open WebUI",
      "chatbot": "Open WebUI",
      "temperature": 0.5,
      "systemInstructions": "You're a helpful coding assistant.",
      "port": 3000
    }
  ],
  "geminiCoder.apiToolCommitMessageSettings": {
    "provider": "Gemini API",
    "model": "gemini-2.5-flash-preview-04-17",
    "temperature": 0.5
  },
  "geminiCoder.apiToolCodeCompletionsSettings": {
    "provider": "Gemini API",
    "model": "gemini-2.5-pro-exp-03-25",
    "temperature": 0.7
  },
  "geminiCoder.apiToolFileRefactoringSettings": {
    "provider": "Gemini API",
    "model": "gemini-2.5-pro-exp-03-25",
    "temperature": 0.7
  },
  "[gdscript]": {
    "editor.defaultFormatter": "geequlim.godot-tools"
  },
  "codeWebChat.presets": [
    {
      "name": "2.5 Pro",
      "chatbot": "AI Studio",
      "model": "gemini-2.5-pro-preview-03-25",
      "temperature": 0.5,
      "systemInstructions": "You're a helpful coding assistant."
    },
    {
      "name": "2.5 Flash",
      "chatbot": "AI Studio",
      "model": "gemini-2.5-flash-preview-04-17",
      "temperature": 0.5,
      "systemInstructions": "You're a helpful coding assistant."
    },
    {
      "name": "2.0 Flash",
      "chatbot": "AI Studio",
      "model": "gemini-2.0-flash",
      "temperature": 0.5,
      "systemInstructions": "You're a helpful coding assistant."
    },
    {
      "name": "2.5 Pro",
      "chatbot": "Gemini",
      "model": "2.5-pro"
    },
    {
      "name": "2.5 Pro (canvas)",
      "chatbot": "Gemini",
      "model": "2.5-pro",
      "options": [
        "canvas"
      ]
    },
    {
      "name": "2.5 Flash",
      "chatbot": "Gemini",
      "model": "2.5-flash-experimental"
    },
    {
      "name": "2.5 Flash (canvas)",
      "chatbot": "Gemini",
      "model": "2.5-flash-experimental",
      "options": [
        "canvas"
      ]
    },
    {
      "name": "ChatGPT",
      "chatbot": "ChatGPT"
    },
    {
      "name": "Claude",
      "chatbot": "Claude"
    },
    {
      "name": "Grok",
      "chatbot": "Grok"
    },
    {
      "name": "Grok (Think)",
      "chatbot": "Grok",
      "options": [
        "think"
      ]
    },
    {
      "name": "DeepSeek",
      "chatbot": "DeepSeek"
    },
    {
      "name": "DeepSeek - DeepThink (R1)",
      "chatbot": "DeepSeek",
      "options": [
        "deep-think"
      ]
    },
    {
      "name": "Qwen",
      "chatbot": "Qwen",
      "options": [
        "thinking"
      ]
    },
    {
      "name": "Mistral",
      "chatbot": "Mistral"
    },
    {
      "name": "HuggingChat",
      "chatbot": "HuggingChat"
    },
    {
      "name": "Open WebUI",
      "chatbot": "Open WebUI",
      "temperature": 0.5,
      "systemInstructions": "You're a helpful coding assistant.",
      "port": 3000
    }
  ],
  "codeWebChat.apiToolCodeCompletionsSettings": {
    "provider": "Gemini API",
    "model": "gemini-2.5-pro-exp-03-25",
    "temperature": 0.7
  },
  "codeWebChat.apiToolFileRefactoringSettings": {
    "provider": "Gemini API",
    "model": "gemini-2.5-pro-exp-03-25",
    "temperature": 0.7
  },
  "codeWebChat.apiToolCommitMessageSettings": {
    "provider": "Gemini API",
    "model": "gemini-2.5-flash-preview-04-17",
    "temperature": 0.5
  },
  "godotTools.formatter.maxEmptyLines": "1",
  "godotTools.inlayHints.gdscript": true,
  "godotTools.formatter.denseFunctionParameters": true,
  "cursorStats.enableAlerts": false,
  "godotTools.editorPath.godot4": "/opt/homebrew/bin/godot",
  "redhat.telemetry.enabled": true,
  "workbench.colorTheme": "One Dark Pro",
  "cursor.composer.collapsePaneInputBoxPills": true
}
